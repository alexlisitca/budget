@model Budget.Web.Mvc.Models.ScheduleVm.ScheduleItemVm

<style>
    label {
        margin-top: 4px !important;
    }
</style>

<div class="row">
    @Html.HiddenFor(model => model.Id)
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.ShortName)
            </div>
            <div class="col-md-9">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control input-sm" } })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.ActionDate)
            </div>
            <div class="col-md-9">
                @Html.EditorFor(model => model.ActionDate, new { htmlAttributes = new { @class = "form-control input-sm datepicker" } })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.Amount)
            </div>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control input-sm" } })
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.ActionCategory)
            </div>
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.ActionCategory.SelectedItem, Model.ActionCategory.SourceList, "", new Dictionary<string, object>
            {
                { "class", "form-control input-sm selectpicker" },
                { "data-live-search", "true" }
            })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.FromScore)
            </div>
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.FromScore.SelectedItem, Model.FromScore.SourceList, "", new Dictionary<string, object>
            {
                { "class", "form-control input-sm selectpicker" },
                { "data-live-search", "true" }
            })
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 rowpadding">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control input-sm" } })
            </div>
        </div>
    </div>
</div>
